#include <iostream>
#include <unordered_map>

int main() {
    int arr[] = {3, 2, 2, -1, -2, 3, -4, 3, -1, 3, -2, 1, 3};
    int n = sizeof(arr) / sizeof(arr[0]);
    std::unordered_map<int, std::pair<int, int>> x;
    x.insert({0, {-1, -1}});
    int prefix_sum = 0;

    for (int i = 0; i < n; i++) {
        prefix_sum += arr[i];

        if (x.find(prefix_sum) != x.end()) {
            x[prefix_sum].second = i;
        } else {
            x.insert({prefix_sum, {i, i}});
        }
    }

    // Display the contents of the unordered_map
    for (const auto& entry : x) {
        std::cout << "Prefix Sum: " << entry.first << ", Range: [" << entry.second.first << ", " << entry.second.second << "]\n";
    }

    return 0;
}
